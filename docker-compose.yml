## 
name: simple-monitoring
services:
## Telegraf as metrics collector.
  telegraf:
    container_name: telegraf
    image: telegraf:1.31.3
    hostname: ${HOST}
    volumes:
      - ./configs/telegraf.conf:/etc/telegraf/telegraf.conf
      - /var/run/docker.sock:/var/run/docker.sock:ro
    user: telegraf:${DOCKER_GROUP_ID}
    ports:
      - "9273:9273"
    networks:
      - telegraf
    profiles:
      - telegraf
      - simple-monitoring
    restart: always

## VMAgent as metrics scraper.
## It scrapes targets defined in --promscrape.config
## And forward them to --remoteWrite.url
  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:v1.106.0
    depends_on:
      - "victoriametrics"
    ports:
      - 8429:8429
    volumes:
      - vmagentdata:/vmagentdata
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--promscrape.configCheckInterval=60s"
      - "--remoteWrite.url=http://victoriametrics:8428/api/v1/write"
    networks:
      - vm_net
    profiles:
      - grafana-vm
      - simple-monitoring
    restart: always

## VictoriaMetrics instance, a single process responsible for
## storing metrics and serve read requests.
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:v1.106.0
    ports:
      - 8428:8428
      - 4242:4242
    volumes:
      - vmdata:/storage
    command:
      - "--storageDataPath=/storage"
      - "--retentionPeriod=7d"
      - "--httpListenAddr=:8428"
      - "--vmalert.proxyURL=http://vmalert:8880"
    networks:
      - vm_net
    profiles:
      - grafana-vm
      - simple-monitoring
    restart: always

## Grafana instance configured with VictoriaMetrics as datasource
  grafana:
    container_name: grafana
    image: grafana/grafana:10.4.12
    depends_on:
      - "victoriametrics"
    ports:
      - 3000:3000
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafanadata:/var/lib/grafana
      - ./configs/grafana.ini:/etc/grafana/grafana.ini
      - ./provisioning/datasources/single.yml:/etc/grafana/provisioning/datasources/single.yml
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboards/victoriametrics.json:/var/lib/grafana/dashboards/vm.json
      - ./dashboards/vmagent.json:/var/lib/grafana/dashboards/vmagent.json
      - ./dashboards/vmalert.json:/var/lib/grafana/dashboards/vmalert.json
    networks:
      - vm_net
    profiles:
      - grafana-vm
      - simple-monitoring
    restart: always

## vmalert executes alerting and recording rules
  vmalert:
    container_name: vmalert
    image: victoriametrics/vmalert:v1.106.0
    depends_on:
      - "victoriametrics"
      - "alertmanager"
    ports:
      - 8880:8880
    volumes:
      - ./rules/alerts.yml:/etc/alerts/alerts.yml
      - ./rules/alerts-health.yml:/etc/alerts/alerts-health.yml
      - ./rules/alerts-vmagent.yml:/etc/alerts/alerts-vmagent.yml
      - ./rules/alerts-vmalert.yml:/etc/alerts/alerts-vmalert.yml
    command:
      - "--datasource.url=http://victoriametrics:8428/"
      - "--remoteRead.url=http://victoriametrics:8428/"
      - "--remoteWrite.url=http://victoriametrics:8428/"
      - "--notifier.url=http://alertmanager:9093/"
      - "--rule=/etc/alerts/*.yml"
      # display source of alerts in grafana
      - "--external.url=http://127.0.0.1:3000" #grafana outside container
      - '--external.alert.source=explore?orgId=1&left={"datasource":"VictoriaMetrics","queries":[{"expr":{{.Expr|jsonEscape|queryEscape}},"refId":"A"}],"range":{"from":"{{ .ActiveAt.UnixMilli }}","to":"now"}}'
    networks:
      - vm_net
    profiles:
      - grafana-vm
      - simple-monitoring
    restart: always

## alertmanager receives alerting notifications from vmalert
## and distributes them according to --config.file.
  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:v0.27.0
    volumes:
      - ./configs/alertmanager.yml:/config/alertmanager.yml
    command:
      - "--config.file=/config/alertmanager.yml"
    ports:
      - 9093:9093
    networks:
      - vm_net
    profiles:
      - grafana-vm
      - simple-monitoring
    restart: always

networks:
  telegraf:
  vm_net:

volumes:
  vmagentdata: {}
  vmdata: {}
  grafanadata: {}
